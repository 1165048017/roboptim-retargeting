
// This file has been generated by the metapod robotbuilder library.

#ifndef HRP4G2_INIT_HH
# define HRP4G2_INIT_HH

# ifdef _MSC_VER
#  pragma warning( push )
// disable warning C4251: need to have DLL interface
// disable warning C4099: struct/class discrepancies
// The following warnings are only needed if the FloatType is float, because
// the code generator uses double anyway.
// disable warning C4305 truncation from 'double' to 'float'
// disable warning C4244 conversion from 'double' to 'float', possible loss of data
#  pragma warning( disable: 4251 4099 4305 4244 )
# endif

# include "config.hh"

# include <metapod/tools/common.hh>
# include <metapod/tools/joint.hh>

// by default, boost fusion vector only provides constructor for vectors with
// up to 10 elements.
# if !defined(FUSION_MAX_VECTOR_SIZE) && (45 > 10)
#  define FUSION_MAX_VECTOR_SIZE 45
# endif
# if defined(FUSION_MAX_VECTOR_SIZE) && (45 > FUSION_MAX_VECTOR_SIZE)
// todo: warn or stop
# endif
# include <boost/fusion/sequence.hpp>
# include <boost/fusion/include/sequence.hpp>
# include <boost/fusion/include/vector.hpp>

namespace metapod {

template <typename FloatType>
class HRP4G2_DLLAPI hrp4g2 {
  METAPOD_TYPEDEFS;
public:
  // the following new/delete operators are only needed if there is a
  // member variable of fixed-size vectorizable Eigen type (or a member
  // having such a member).
  // It's not easy to tell in advance, so let always use the aligned operators.
  EIGEN_MAKE_ALIGNED_OPERATOR_NEW
  // Global constants or variable of the robot
  enum { NBDOF = 50 };
  enum { NBBODIES = 45 };

  typedef FloatType RobotFloatType;
  typedef Eigen::Matrix< FloatType, NBDOF, 1 > confVector;

  enum NodeId
  {
    base_link = 0,
    CHEST_P_LINK = 1,
    CHEST_R_LINK = 2,
    CHEST_Y_LINK = 3,
    L_SHOULDER_P_LINK = 4,
    L_SHOULDER_R_LINK = 5,
    L_SHOULDER_Y_LINK = 6,
    L_ELBOW_P_LINK = 7,
    L_WRIST_Y_LINK = 8,
    L_WRIST_R_LINK = 9,
    L_HAND_J0_LINK = 10,
    L_HAND_J1_LINK = 11,
    NECK_Y_LINK = 12,
    NECK_R_LINK = 13,
    NECK_P_LINK = 14,
    EYEBROW_P_LINK = 15,
    EYELID_P_LINK = 16,
    EYE_P_LINK = 17,
    EYE_Y_LINK = 18,
    MOUTH_P_LINK = 19,
    CHEEK_P_LINK = 20,
    LOWERLIP_P_LINK = 21,
    UPPERLIP_P_LINK = 22,
    R_SHOULDER_P_LINK = 23,
    R_SHOULDER_R_LINK = 24,
    R_SHOULDER_Y_LINK = 25,
    R_ELBOW_P_LINK = 26,
    R_WRIST_Y_LINK = 27,
    R_WRIST_R_LINK = 28,
    R_HAND_J0_LINK = 29,
    R_HAND_J1_LINK = 30,
    L_HIP_Y_LINK = 31,
    L_HIP_R_LINK = 32,
    L_HIP_P_LINK = 33,
    L_KNEE_P_LINK = 34,
    L_ANKLE_P_LINK = 35,
    L_ANKLE_R_LINK = 36,
    L_TOE_P_LINK = 37,
    R_HIP_Y_LINK = 38,
    R_HIP_R_LINK = 39,
    R_HIP_P_LINK = 40,
    R_KNEE_P_LINK = 41,
    R_ANKLE_P_LINK = 42,
    R_ANKLE_R_LINK = 43,
    R_TOE_P_LINK = 44
  };

  // children of the root/NP node
  static const int child0_id = 0;
  static const int child1_id = -2;
  static const int child2_id = -2;
  static const int child3_id = -2;
  static const int child4_id = -2;

  // definition of the node classes (except the root/NP node)

  class HRP4G2_DLLAPI Node0 {
  public:
    Node0();
    static const int id = 0;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 0;
    typedef FreeFlyerJoint<FloatType> Joint;
    static const int parent_id = -1;
    static const int child0_id = 1;
    static const int child1_id = 31;
    static const int child2_id = 38;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node1 {
  public:
    Node1();
    static const int id = 1;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 6;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 0;
    static const int child0_id = 2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node2 {
  public:
    Node2();
    static const int id = 2;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 7;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 1;
    static const int child0_id = 3;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node3 {
  public:
    Node3();
    static const int id = 3;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 8;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 2;
    static const int child0_id = 4;
    static const int child1_id = 12;
    static const int child2_id = 23;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node4 {
  public:
    Node4();
    static const int id = 4;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 9;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 3;
    static const int child0_id = 5;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node5 {
  public:
    Node5();
    static const int id = 5;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 10;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 4;
    static const int child0_id = 6;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node6 {
  public:
    Node6();
    static const int id = 6;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 11;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 5;
    static const int child0_id = 7;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node7 {
  public:
    Node7();
    static const int id = 7;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 12;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 6;
    static const int child0_id = 8;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node8 {
  public:
    Node8();
    static const int id = 8;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixTpl<FloatType> > Xt;
    static const int q_idx = 13;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 7;
    static const int child0_id = 9;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node9 {
  public:
    Node9();
    static const int id = 9;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 14;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 8;
    static const int child0_id = 10;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node10 {
  public:
    Node10();
    static const int id = 10;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 15;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 9;
    static const int child0_id = 11;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node11 {
  public:
    Node11();
    static const int id = 11;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 16;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 10;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node12 {
  public:
    Node12();
    static const int id = 12;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 17;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 3;
    static const int child0_id = 13;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node13 {
  public:
    Node13();
    static const int id = 13;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 18;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 12;
    static const int child0_id = 14;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node14 {
  public:
    Node14();
    static const int id = 14;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 19;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 13;
    static const int child0_id = 15;
    static const int child1_id = 16;
    static const int child2_id = 17;
    static const int child3_id = 19;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node15 {
  public:
    Node15();
    static const int id = 15;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 20;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 14;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node16 {
  public:
    Node16();
    static const int id = 16;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 21;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 14;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node17 {
  public:
    Node17();
    static const int id = 17;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 22;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 14;
    static const int child0_id = 18;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node18 {
  public:
    Node18();
    static const int id = 18;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 23;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 17;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node19 {
  public:
    Node19();
    static const int id = 19;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 24;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 14;
    static const int child0_id = 20;
    static const int child1_id = 21;
    static const int child2_id = 22;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node20 {
  public:
    Node20();
    static const int id = 20;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 25;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 19;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node21 {
  public:
    Node21();
    static const int id = 21;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 26;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 19;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node22 {
  public:
    Node22();
    static const int id = 22;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 27;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 19;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node23 {
  public:
    Node23();
    static const int id = 23;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 28;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 3;
    static const int child0_id = 24;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node24 {
  public:
    Node24();
    static const int id = 24;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 29;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 23;
    static const int child0_id = 25;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node25 {
  public:
    Node25();
    static const int id = 25;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 30;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 24;
    static const int child0_id = 26;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node26 {
  public:
    Node26();
    static const int id = 26;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 31;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 25;
    static const int child0_id = 27;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node27 {
  public:
    Node27();
    static const int id = 27;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixTpl<FloatType> > Xt;
    static const int q_idx = 32;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 26;
    static const int child0_id = 28;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node28 {
  public:
    Node28();
    static const int id = 28;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 33;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 27;
    static const int child0_id = 29;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node29 {
  public:
    Node29();
    static const int id = 29;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 34;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 28;
    static const int child0_id = 30;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node30 {
  public:
    Node30();
    static const int id = 30;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 35;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 29;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node31 {
  public:
    Node31();
    static const int id = 31;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 36;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 0;
    static const int child0_id = 32;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node32 {
  public:
    Node32();
    static const int id = 32;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 37;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 31;
    static const int child0_id = 33;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node33 {
  public:
    Node33();
    static const int id = 33;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 38;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 32;
    static const int child0_id = 34;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node34 {
  public:
    Node34();
    static const int id = 34;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 39;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 33;
    static const int child0_id = 35;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node35 {
  public:
    Node35();
    static const int id = 35;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 40;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 34;
    static const int child0_id = 36;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node36 {
  public:
    Node36();
    static const int id = 36;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 41;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 35;
    static const int child0_id = 37;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node37 {
  public:
    Node37();
    static const int id = 37;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 42;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 36;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node38 {
  public:
    Node38();
    static const int id = 38;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 43;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 0;
    static const int child0_id = 39;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node39 {
  public:
    Node39();
    static const int id = 39;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 44;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 38;
    static const int child0_id = 40;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node40 {
  public:
    Node40();
    static const int id = 40;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 45;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 39;
    static const int child0_id = 41;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node41 {
  public:
    Node41();
    static const int id = 41;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 46;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 40;
    static const int child0_id = 42;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node42 {
  public:
    Node42();
    static const int id = 42;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 47;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 41;
    static const int child0_id = 43;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node43 {
  public:
    Node43();
    static const int id = 43;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 48;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 42;
    static const int child0_id = 44;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };

  class HRP4G2_DLLAPI Node44 {
  public:
    Node44();
    static const int id = 44;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<FloatType, Spatial::RotationMatrixIdentityTpl<FloatType> > Xt;
    static const int q_idx = 49;
    typedef RevoluteAxisAnyJoint<FloatType> Joint;
    static const int parent_id = 43;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<FloatType, typename Spatial::rm_mul_op<FloatType,Spatial::RotationMatrixTpl<FloatType>, Spatial::RotationMatrixIdentityTpl<FloatType> >::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body<FloatType> body;
  };


  // vector of the robot nodes
  typedef boost::fusion::vector45<
      Node0,
      Node1,
      Node2,
      Node3,
      Node4,
      Node5,
      Node6,
      Node7,
      Node8,
      Node9,
      Node10,
      Node11,
      Node12,
      Node13,
      Node14,
      Node15,
      Node16,
      Node17,
      Node18,
      Node19,
      Node20,
      Node21,
      Node22,
      Node23,
      Node24,
      Node25,
      Node26,
      Node27,
      Node28,
      Node29,
      Node30,
      Node31,
      Node32,
      Node33,
      Node34,
      Node35,
      Node36,
      Node37,
      Node38,
      Node39,
      Node40,
      Node41,
      Node42,
      Node43,
      Node44>
  NodeVector;

  // member variables

  // inertias expressed in body frames
  static Inertia inertias[45];
  NodeVector nodes;
  Eigen::Matrix< FloatType, NBDOF, NBDOF > H; // used by crba

  hrp4g2():
    H(Eigen::Matrix< FloatType, NBDOF, NBDOF >::Zero())
  {}
};

// map node id to node type
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 0> {typedef typename hrp4g2<FloatType>::Node0 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 1> {typedef typename hrp4g2<FloatType>::Node1 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 2> {typedef typename hrp4g2<FloatType>::Node2 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 3> {typedef typename hrp4g2<FloatType>::Node3 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 4> {typedef typename hrp4g2<FloatType>::Node4 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 5> {typedef typename hrp4g2<FloatType>::Node5 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 6> {typedef typename hrp4g2<FloatType>::Node6 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 7> {typedef typename hrp4g2<FloatType>::Node7 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 8> {typedef typename hrp4g2<FloatType>::Node8 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 9> {typedef typename hrp4g2<FloatType>::Node9 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 10> {typedef typename hrp4g2<FloatType>::Node10 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 11> {typedef typename hrp4g2<FloatType>::Node11 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 12> {typedef typename hrp4g2<FloatType>::Node12 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 13> {typedef typename hrp4g2<FloatType>::Node13 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 14> {typedef typename hrp4g2<FloatType>::Node14 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 15> {typedef typename hrp4g2<FloatType>::Node15 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 16> {typedef typename hrp4g2<FloatType>::Node16 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 17> {typedef typename hrp4g2<FloatType>::Node17 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 18> {typedef typename hrp4g2<FloatType>::Node18 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 19> {typedef typename hrp4g2<FloatType>::Node19 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 20> {typedef typename hrp4g2<FloatType>::Node20 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 21> {typedef typename hrp4g2<FloatType>::Node21 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 22> {typedef typename hrp4g2<FloatType>::Node22 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 23> {typedef typename hrp4g2<FloatType>::Node23 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 24> {typedef typename hrp4g2<FloatType>::Node24 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 25> {typedef typename hrp4g2<FloatType>::Node25 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 26> {typedef typename hrp4g2<FloatType>::Node26 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 27> {typedef typename hrp4g2<FloatType>::Node27 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 28> {typedef typename hrp4g2<FloatType>::Node28 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 29> {typedef typename hrp4g2<FloatType>::Node29 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 30> {typedef typename hrp4g2<FloatType>::Node30 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 31> {typedef typename hrp4g2<FloatType>::Node31 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 32> {typedef typename hrp4g2<FloatType>::Node32 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 33> {typedef typename hrp4g2<FloatType>::Node33 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 34> {typedef typename hrp4g2<FloatType>::Node34 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 35> {typedef typename hrp4g2<FloatType>::Node35 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 36> {typedef typename hrp4g2<FloatType>::Node36 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 37> {typedef typename hrp4g2<FloatType>::Node37 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 38> {typedef typename hrp4g2<FloatType>::Node38 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 39> {typedef typename hrp4g2<FloatType>::Node39 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 40> {typedef typename hrp4g2<FloatType>::Node40 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 41> {typedef typename hrp4g2<FloatType>::Node41 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 42> {typedef typename hrp4g2<FloatType>::Node42 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 43> {typedef typename hrp4g2<FloatType>::Node43 type;};
template <typename FloatType> struct Nodes < hrp4g2<FloatType>, 44> {typedef typename hrp4g2<FloatType>::Node44 type;};


} // closing namespace metapod

# ifdef _MSC_VER
#  pragma warning( pop )
# endif

#endif

