
// This file has been generated by the metapod robotbuilder library.

#ifndef HRP4G2_INIT_HH
# define HRP4G2_INIT_HH

# ifdef _MSC_VER
#  pragma warning( push )
// disable warning C4251: need to have DLL interface
// disable warning C4099: struct/class discrepancies
#  pragma warning( disable: 4251 4099 )
# endif

# include "config.hh"

# include <metapod/tools/common.hh>
# include <metapod/tools/joint.hh>

// by default, boost fusion vector only provides constructor for vectors with
// up to 10 elements.
# if !defined(FUSION_MAX_VECTOR_SIZE) && (44 > 10)
#  define FUSION_MAX_VECTOR_SIZE 44
# endif
# if defined(FUSION_MAX_VECTOR_SIZE) && (44 > FUSION_MAX_VECTOR_SIZE)
// todo: warn or stop
# endif
# include <boost/fusion/sequence.hpp>
# include <boost/fusion/include/sequence.hpp>
# include <boost/fusion/include/vector.hpp>

namespace metapod {

class HRP4G2_DLLAPI hrp4g2 {
public:
  // Global constants or variable of the robot
  enum { NBDOF = 44 };
  enum { NBBODIES = 44 };

  typedef Eigen::Matrix< FloatType, NBDOF, 1 > confVector;

  enum NodeId
  {
    CHEST_P_LINK = 0,
    CHEST_R_LINK = 1,
    CHEST_Y_LINK = 2,
    L_SHOULDER_P_LINK = 3,
    L_SHOULDER_R_LINK = 4,
    L_SHOULDER_Y_LINK = 5,
    L_ELBOW_P_LINK = 6,
    L_WRIST_Y_LINK = 7,
    L_WRIST_R_LINK = 8,
    L_HAND_J0_LINK = 9,
    L_HAND_J1_LINK = 10,
    NECK_Y_LINK = 11,
    NECK_R_LINK = 12,
    NECK_P_LINK = 13,
    EYEBROW_P_LINK = 14,
    EYELID_P_LINK = 15,
    EYE_P_LINK = 16,
    EYE_Y_LINK = 17,
    MOUTH_P_LINK = 18,
    CHEEK_P_LINK = 19,
    LOWERLIP_P_LINK = 20,
    UPPERLIP_P_LINK = 21,
    R_SHOULDER_P_LINK = 22,
    R_SHOULDER_R_LINK = 23,
    R_SHOULDER_Y_LINK = 24,
    R_ELBOW_P_LINK = 25,
    R_WRIST_Y_LINK = 26,
    R_WRIST_R_LINK = 27,
    R_HAND_J0_LINK = 28,
    R_HAND_J1_LINK = 29,
    L_HIP_Y_LINK = 30,
    L_HIP_R_LINK = 31,
    L_HIP_P_LINK = 32,
    L_KNEE_P_LINK = 33,
    L_ANKLE_P_LINK = 34,
    L_ANKLE_R_LINK = 35,
    L_TOE_P_LINK = 36,
    R_HIP_Y_LINK = 37,
    R_HIP_R_LINK = 38,
    R_HIP_P_LINK = 39,
    R_KNEE_P_LINK = 40,
    R_ANKLE_P_LINK = 41,
    R_ANKLE_R_LINK = 42,
    R_TOE_P_LINK = 43
  };

  // children of the root/NP node
  static const int child0_id = 0;
  static const int child1_id = 30;
  static const int child2_id = 37;
  static const int child3_id = -2;
  static const int child4_id = -2;

  // definition of the node classes (except the root/NP node)

  class HRP4G2_DLLAPI Node0 {
  public:
    Node0();
    static const int id = 0;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 0;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = -1;
    static const int child0_id = 1;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node1 {
  public:
    Node1();
    static const int id = 1;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 1;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 0;
    static const int child0_id = 2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node2 {
  public:
    Node2();
    static const int id = 2;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 2;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 1;
    static const int child0_id = 3;
    static const int child1_id = 11;
    static const int child2_id = 22;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node3 {
  public:
    Node3();
    static const int id = 3;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 3;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 2;
    static const int child0_id = 4;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node4 {
  public:
    Node4();
    static const int id = 4;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 4;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 3;
    static const int child0_id = 5;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node5 {
  public:
    Node5();
    static const int id = 5;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 5;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 4;
    static const int child0_id = 6;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node6 {
  public:
    Node6();
    static const int id = 6;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 6;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 5;
    static const int child0_id = 7;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node7 {
  public:
    Node7();
    static const int id = 7;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::Transform Xt;
    static const int q_idx = 7;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 6;
    static const int child0_id = 8;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrix>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node8 {
  public:
    Node8();
    static const int id = 8;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 8;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 7;
    static const int child0_id = 9;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node9 {
  public:
    Node9();
    static const int id = 9;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 9;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 8;
    static const int child0_id = 10;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node10 {
  public:
    Node10();
    static const int id = 10;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 10;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 9;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node11 {
  public:
    Node11();
    static const int id = 11;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 11;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 2;
    static const int child0_id = 12;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node12 {
  public:
    Node12();
    static const int id = 12;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 12;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 11;
    static const int child0_id = 13;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node13 {
  public:
    Node13();
    static const int id = 13;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 13;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 12;
    static const int child0_id = 14;
    static const int child1_id = 15;
    static const int child2_id = 16;
    static const int child3_id = 18;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node14 {
  public:
    Node14();
    static const int id = 14;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 14;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 13;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node15 {
  public:
    Node15();
    static const int id = 15;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 15;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 13;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node16 {
  public:
    Node16();
    static const int id = 16;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 16;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 13;
    static const int child0_id = 17;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node17 {
  public:
    Node17();
    static const int id = 17;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 17;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 16;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node18 {
  public:
    Node18();
    static const int id = 18;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 18;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 13;
    static const int child0_id = 19;
    static const int child1_id = 20;
    static const int child2_id = 21;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node19 {
  public:
    Node19();
    static const int id = 19;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 19;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 18;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node20 {
  public:
    Node20();
    static const int id = 20;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 20;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 18;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node21 {
  public:
    Node21();
    static const int id = 21;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 21;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 18;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node22 {
  public:
    Node22();
    static const int id = 22;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 22;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 2;
    static const int child0_id = 23;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node23 {
  public:
    Node23();
    static const int id = 23;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 23;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 22;
    static const int child0_id = 24;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node24 {
  public:
    Node24();
    static const int id = 24;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 24;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 23;
    static const int child0_id = 25;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node25 {
  public:
    Node25();
    static const int id = 25;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 25;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 24;
    static const int child0_id = 26;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node26 {
  public:
    Node26();
    static const int id = 26;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::Transform Xt;
    static const int q_idx = 26;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 25;
    static const int child0_id = 27;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrix>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node27 {
  public:
    Node27();
    static const int id = 27;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 27;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 26;
    static const int child0_id = 28;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node28 {
  public:
    Node28();
    static const int id = 28;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 28;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 27;
    static const int child0_id = 29;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node29 {
  public:
    Node29();
    static const int id = 29;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 29;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 28;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node30 {
  public:
    Node30();
    static const int id = 30;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 30;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = -1;
    static const int child0_id = 31;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node31 {
  public:
    Node31();
    static const int id = 31;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 31;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 30;
    static const int child0_id = 32;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node32 {
  public:
    Node32();
    static const int id = 32;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 32;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 31;
    static const int child0_id = 33;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node33 {
  public:
    Node33();
    static const int id = 33;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 33;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 32;
    static const int child0_id = 34;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node34 {
  public:
    Node34();
    static const int id = 34;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 34;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 33;
    static const int child0_id = 35;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node35 {
  public:
    Node35();
    static const int id = 35;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 35;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 34;
    static const int child0_id = 36;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node36 {
  public:
    Node36();
    static const int id = 36;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 36;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 35;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node37 {
  public:
    Node37();
    static const int id = 37;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 37;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = -1;
    static const int child0_id = 38;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node38 {
  public:
    Node38();
    static const int id = 38;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 38;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 37;
    static const int child0_id = 39;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node39 {
  public:
    Node39();
    static const int id = 39;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 39;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 38;
    static const int child0_id = 40;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node40 {
  public:
    Node40();
    static const int id = 40;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 40;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 39;
    static const int child0_id = 41;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node41 {
  public:
    Node41();
    static const int id = 41;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 41;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 40;
    static const int child0_id = 42;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node42 {
  public:
    Node42();
    static const int id = 42;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 42;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 41;
    static const int child0_id = 43;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };

  class HRP4G2_DLLAPI Node43 {
  public:
    Node43();
    static const int id = 43;
    static const std::string joint_name;
    static const std::string body_name;
    static const Spatial::TransformT<Spatial::RotationMatrixIdentity> Xt;
    static const int q_idx = 43;
    typedef RevoluteAxisAnyJoint Joint;
    static const int parent_id = 42;
    static const int child0_id = -2;
    static const int child1_id = -2;
    static const int child2_id = -2;
    static const int child3_id = -2;
    static const int child4_id = -2;
    Spatial::TransformT<Spatial::rm_mul_op<Spatial::RotationMatrix, Spatial::RotationMatrixIdentity>::rm> sXp;
    Eigen::Matrix<FloatType, 6, Joint::NBDOF> joint_F; // used by crba
    Joint joint;
    Body body;
  };


  // vector of the robot nodes
  typedef boost::fusion::vector44<
      Node0,
      Node1,
      Node2,
      Node3,
      Node4,
      Node5,
      Node6,
      Node7,
      Node8,
      Node9,
      Node10,
      Node11,
      Node12,
      Node13,
      Node14,
      Node15,
      Node16,
      Node17,
      Node18,
      Node19,
      Node20,
      Node21,
      Node22,
      Node23,
      Node24,
      Node25,
      Node26,
      Node27,
      Node28,
      Node29,
      Node30,
      Node31,
      Node32,
      Node33,
      Node34,
      Node35,
      Node36,
      Node37,
      Node38,
      Node39,
      Node40,
      Node41,
      Node42,
      Node43>
  NodeVector;

  // member variables

  // inertias expressed in body frames
  static Spatial::Inertia inertias[44];
  NodeVector nodes;
  Eigen::Matrix< FloatType, NBDOF, NBDOF > H; // used by crba

  hrp4g2():
    H(Eigen::Matrix< FloatType, NBDOF, NBDOF >::Zero())
  {}
};

// map node id to node type
template <> struct Nodes <hrp4g2, 0> {typedef hrp4g2::Node0 type;};
template <> struct Nodes <hrp4g2, 1> {typedef hrp4g2::Node1 type;};
template <> struct Nodes <hrp4g2, 2> {typedef hrp4g2::Node2 type;};
template <> struct Nodes <hrp4g2, 3> {typedef hrp4g2::Node3 type;};
template <> struct Nodes <hrp4g2, 4> {typedef hrp4g2::Node4 type;};
template <> struct Nodes <hrp4g2, 5> {typedef hrp4g2::Node5 type;};
template <> struct Nodes <hrp4g2, 6> {typedef hrp4g2::Node6 type;};
template <> struct Nodes <hrp4g2, 7> {typedef hrp4g2::Node7 type;};
template <> struct Nodes <hrp4g2, 8> {typedef hrp4g2::Node8 type;};
template <> struct Nodes <hrp4g2, 9> {typedef hrp4g2::Node9 type;};
template <> struct Nodes <hrp4g2, 10> {typedef hrp4g2::Node10 type;};
template <> struct Nodes <hrp4g2, 11> {typedef hrp4g2::Node11 type;};
template <> struct Nodes <hrp4g2, 12> {typedef hrp4g2::Node12 type;};
template <> struct Nodes <hrp4g2, 13> {typedef hrp4g2::Node13 type;};
template <> struct Nodes <hrp4g2, 14> {typedef hrp4g2::Node14 type;};
template <> struct Nodes <hrp4g2, 15> {typedef hrp4g2::Node15 type;};
template <> struct Nodes <hrp4g2, 16> {typedef hrp4g2::Node16 type;};
template <> struct Nodes <hrp4g2, 17> {typedef hrp4g2::Node17 type;};
template <> struct Nodes <hrp4g2, 18> {typedef hrp4g2::Node18 type;};
template <> struct Nodes <hrp4g2, 19> {typedef hrp4g2::Node19 type;};
template <> struct Nodes <hrp4g2, 20> {typedef hrp4g2::Node20 type;};
template <> struct Nodes <hrp4g2, 21> {typedef hrp4g2::Node21 type;};
template <> struct Nodes <hrp4g2, 22> {typedef hrp4g2::Node22 type;};
template <> struct Nodes <hrp4g2, 23> {typedef hrp4g2::Node23 type;};
template <> struct Nodes <hrp4g2, 24> {typedef hrp4g2::Node24 type;};
template <> struct Nodes <hrp4g2, 25> {typedef hrp4g2::Node25 type;};
template <> struct Nodes <hrp4g2, 26> {typedef hrp4g2::Node26 type;};
template <> struct Nodes <hrp4g2, 27> {typedef hrp4g2::Node27 type;};
template <> struct Nodes <hrp4g2, 28> {typedef hrp4g2::Node28 type;};
template <> struct Nodes <hrp4g2, 29> {typedef hrp4g2::Node29 type;};
template <> struct Nodes <hrp4g2, 30> {typedef hrp4g2::Node30 type;};
template <> struct Nodes <hrp4g2, 31> {typedef hrp4g2::Node31 type;};
template <> struct Nodes <hrp4g2, 32> {typedef hrp4g2::Node32 type;};
template <> struct Nodes <hrp4g2, 33> {typedef hrp4g2::Node33 type;};
template <> struct Nodes <hrp4g2, 34> {typedef hrp4g2::Node34 type;};
template <> struct Nodes <hrp4g2, 35> {typedef hrp4g2::Node35 type;};
template <> struct Nodes <hrp4g2, 36> {typedef hrp4g2::Node36 type;};
template <> struct Nodes <hrp4g2, 37> {typedef hrp4g2::Node37 type;};
template <> struct Nodes <hrp4g2, 38> {typedef hrp4g2::Node38 type;};
template <> struct Nodes <hrp4g2, 39> {typedef hrp4g2::Node39 type;};
template <> struct Nodes <hrp4g2, 40> {typedef hrp4g2::Node40 type;};
template <> struct Nodes <hrp4g2, 41> {typedef hrp4g2::Node41 type;};
template <> struct Nodes <hrp4g2, 42> {typedef hrp4g2::Node42 type;};
template <> struct Nodes <hrp4g2, 43> {typedef hrp4g2::Node43 type;};


} // closing namespace metapod

# ifdef _MSC_VER
#  pragma warning( pop )
# endif

#endif

